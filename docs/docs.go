// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/products": {
            "get": {
                "description": "List products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "List products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONSuccessResultProducts"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSONErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSONErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSONErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/products/{id}": {
            "get": {
                "description": "Get details of a product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONSuccessResultProduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSONErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSONErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSONErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/products/{id}/reviews": {
            "get": {
                "description": "Get reviews",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get reviews by product ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONSuccessResultReview"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSONErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSONErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSONErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/sellers/{id}": {
            "get": {
                "description": "Get details of a seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sellers"
                ],
                "summary": "Get seller by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sellers ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONSuccessResultSeller"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSONErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSONErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSONErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "model.Image": {
            "type": "object",
            "properties": {
                "size": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Price": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "model.Product": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "create_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Image"
                    }
                },
                "payment_methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "price": {
                    "$ref": "#/definitions/model.Price"
                },
                "rating": {
                    "type": "number"
                },
                "seller_id": {
                    "type": "string"
                },
                "short_description": {
                    "type": "string"
                },
                "sold_quantity": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
        "model.Reputation": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "transaction": {
                    "$ref": "#/definitions/model.Transaction"
                }
            }
        },
        "model.Review": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "create_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "product_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
        "model.Seller": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/model.Address"
                },
                "create_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "reputation": {
                    "$ref": "#/definitions/model.Reputation"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
        "model.Transaction": {
            "type": "object",
            "properties": {
                "canceled": {
                    "type": "integer"
                },
                "completed": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                }
            }
        },
        "response.JSONErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "something went wrong"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-06-05T18:44:26.131446-03:00"
                }
            }
        },
        "response.JSONSuccessResultProduct": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Product"
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-06-05T18:44:26.131446-03:00"
                }
            }
        },
        "response.JSONSuccessResultProducts": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Product"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "number_of_products": {
                    "type": "integer",
                    "example": 10
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-06-05T18:44:26.131446-03:00"
                }
            }
        },
        "response.JSONSuccessResultReview": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Review"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-06-05T18:44:26.131446-03:00"
                }
            }
        },
        "response.JSONSuccessResultSeller": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Seller"
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-06-05T18:44:26.131446-03:00"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Meli Desafio",
	Description:      "Meli Desafio - Enrico Papsch Di Giacomo",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
